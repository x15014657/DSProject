package com.conorjc.dsproject.client;


import com.proto.printer.*;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import io.grpc.stub.StreamObserver;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;


@SuppressWarnings("ALL")
public class Controller extends javax.swing.JFrame implements ActionListener {


    /**
     * Creates new form NewJFrame
     */
    public Controller() {
        getContentPane().setBackground(Color.BLACK);
        getContentPane().setForeground(Color.BLACK);
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        container = new javax.swing.JLayeredPane();
        container.setForeground(Color.GRAY);
        btPrintTest = new javax.swing.JButton();
        btPrintTest.setBackground(new Color(255, 215, 0));
        btPrinterStatus = new javax.swing.JButton();
        btVpnLocation = new javax.swing.JButton();
        btVpnLocation.setBackground(new Color(255, 215, 0));
        btVpnStatus = new javax.swing.JButton();
        btVpnStatus.addActionListener(e -> {
        });
        btLightUp = new javax.swing.JButton();
        btLightUp.setBackground(new Color(123, 104, 238));
        btLightingStatus = new javax.swing.JButton();
        btLightingStatus.setAction(action_1);
        btPrinterOn = new javax.swing.JButton();
        btPrinterOn.setForeground(new Color(0, 0, 0));
        btPrinterOn.setBackground(new Color(154, 205, 50));
        btThermostatUp = new javax.swing.JButton();
        btThermostatUp.setBackground(new Color(123, 104, 238));
        btVpnOn = new javax.swing.JButton();
        btVpnOn.setForeground(new Color(0, 0, 0));
        btVpnOn.setBackground(new Color(154, 205, 50));
        vpnStatus = new javax.swing.JTextField();
        btLightingOn = new javax.swing.JButton();
        btLightingOn.setForeground(new Color(0, 0, 0));
        btLightingOn.setBackground(new Color(154, 205, 50));
        btThermostatOn = new javax.swing.JButton();
        btThermostatOn.setForeground(new Color(0, 0, 0));
        btThermostatOn.setBackground(new Color(154, 205, 50));
        btPrinterOff = new javax.swing.JButton();
        btPrinterOff.setBackground(new Color(220, 20, 60));
        thermostatStatus = new javax.swing.JTextField();
        btLightDown = new javax.swing.JButton();
        btLightDown.setBackground(new Color(30, 144, 255));
        btVpnOff = new javax.swing.JButton();
        btVpnOff.setBackground(new Color(220, 20, 60));
        btLightingOff = new javax.swing.JButton();
        btLightingOff.setBackground(new Color(220, 20, 60));
        btThermostatOff = new javax.swing.JButton();
        btThermostatOff.setBackground(new Color(220, 20, 60));
        btThermostatDown = new javax.swing.JButton();
        btThermostatDown.setBackground(new Color(30, 144, 255));
        printerStatus = new javax.swing.JTextField();
        btThermostatStatus = new javax.swing.JButton();
        btThermostatStatus.addActionListener(e -> {
        });
        lightingStatus = new javax.swing.JTextField();
        logoLabel = new javax.swing.JLabel();
        logoLabel.setForeground(Color.WHITE);
        logoLabel.setHorizontalAlignment(SwingConstants.CENTER);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
                jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
                jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));

        container.setBackground(Color.GRAY);
        container.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btPrintTest.setText("Print Test Page");

        btPrinterStatus.setText("Printer Services");
        btPrinterStatus.addActionListener(evt -> {
            btPrinterStatusActionPerformed(evt);

            JButton button = (JButton)evt.getSource();
            String label = button.getActionCommand();

        });

        btVpnLocation.setText("Change Location");
        btVpnLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVpnLocationActionPerformed(evt);
            }
        });

        btVpnStatus.setText("Virtual Private Network");

        btLightUp.setText("Brighten +");

        btLightingStatus.setText("Light Service");
        btLightingStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLightingStatusActionPerformed(evt);
            }
        });

        btPrinterOn.setText("Printer On");

        btThermostatUp.setText("Warm +");

        btVpnOn.setText("Vpn On");

        vpnStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerStatusActionPerformed(evt);
            }
        });

        btLightingOn.setText("Lighting On");

        btThermostatOn.setText("Thermostat On");

        btPrinterOff.setText("Printer Off");

        thermostatStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightingStatusActionPerformed(evt);
            }
        });

        btLightDown.setText("Dim -");
        btLightDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLightDownActionPerformed(evt);
            }
        });

        btVpnOff.setText("Vpn Off");

        btLightingOff.setText("Lighting Off");

        btThermostatOff.setText("Thermostat Off");

        btThermostatDown.setText("Cool -");

        printerStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerStatus1ActionPerformed(evt);
            }
        });

        btThermostatStatus.setText("Thermostat Service");

        lightingStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightingStatus1ActionPerformed(evt);
            }
        });

        logoLabel.setFont(new Font("Baskerville Old Face", Font.BOLD, 30));

        container.setLayer(btPrintTest, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btPrinterStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btVpnLocation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btVpnStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btLightUp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btLightingStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btPrinterOn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btThermostatUp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btVpnOn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(vpnStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btLightingOn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btThermostatOn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btPrinterOff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(thermostatStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btLightDown, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btVpnOff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btLightingOff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btThermostatOff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btThermostatDown, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(printerStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(btThermostatStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(lightingStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(logoLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblNewLabel = new JLabel("Smart Home-Office");
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        lblNewLabel.setFont(new Font("Baskerville Old Face", Font.PLAIN, 24));
        lblNewLabel.setForeground(Color.CYAN);

        javax.swing.GroupLayout gl_container = new javax.swing.GroupLayout(container);
        gl_container.setHorizontalGroup(
                gl_container.createParallelGroup(Alignment.LEADING)
                        .addGroup(gl_container.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(gl_container.createParallelGroup(Alignment.LEADING)
                                        .addGroup(Alignment.TRAILING, gl_container.createSequentialGroup()
                                                .addGroup(gl_container.createParallelGroup(Alignment.LEADING, false)
                                                        .addComponent(btPrinterStatus, GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                        .addComponent(btPrintTest, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btPrinterOn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btPrinterOff, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(printerStatus))
                                                .addGap(18)
                                                .addGroup(gl_container.createParallelGroup(Alignment.LEADING, false)
                                                        .addComponent(btVpnStatus, GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                        .addComponent(vpnStatus)
                                                        .addComponent(btVpnOn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btVpnOff, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btVpnLocation, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(19)
                                                .addGroup(gl_container.createParallelGroup(Alignment.TRAILING)
                                                        .addGroup(gl_container.createParallelGroup(Alignment.LEADING)
                                                                .addComponent(btLightingOn, GroupLayout.PREFERRED_SIZE, 153, GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(btLightingOff, GroupLayout.PREFERRED_SIZE, 153, GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(gl_container.createSequentialGroup()
                                                                        .addComponent(btLightUp, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(ComponentPlacement.RELATED)
                                                                        .addComponent(btLightDown, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(btLightingStatus, GroupLayout.PREFERRED_SIZE, 153, GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(lightingStatus, GroupLayout.PREFERRED_SIZE, 153, GroupLayout.PREFERRED_SIZE))
                                                .addGap(18)
                                                .addGroup(gl_container.createParallelGroup(Alignment.LEADING)
                                                        .addGroup(gl_container.createSequentialGroup()
                                                                .addComponent(btThermostatUp)
                                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                                .addComponent(btThermostatDown, GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                                                        .addComponent(btThermostatOff, GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                        .addComponent(btThermostatOn, GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                        .addComponent(btThermostatStatus, GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                        .addComponent(thermostatStatus, GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)))
                                        .addComponent(lblNewLabel, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                                        .addComponent(logoLabel, GroupLayout.PREFERRED_SIZE, 677, Short.MAX_VALUE))
                                .addContainerGap())
        );
        gl_container.setVerticalGroup(
                gl_container.createParallelGroup(Alignment.LEADING)
                        .addGroup(gl_container.createSequentialGroup()
                                .addComponent(logoLabel, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                                .addGap(11)
                                .addComponent(lblNewLabel)
                                .addGap(12)
                                .addGroup(gl_container.createParallelGroup(Alignment.TRAILING)
                                        .addComponent(btThermostatStatus, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(gl_container.createParallelGroup(Alignment.LEADING)
                                                .addComponent(btVpnStatus, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btPrinterStatus, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btLightingStatus, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(gl_container.createParallelGroup(Alignment.TRAILING)
                                        .addComponent(thermostatStatus, GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                        .addGroup(Alignment.LEADING, gl_container.createSequentialGroup()
                                                .addGroup(gl_container.createParallelGroup(Alignment.LEADING)
                                                        .addComponent(vpnStatus, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(printerStatus, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(lightingStatus, GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(gl_container.createParallelGroup(Alignment.BASELINE)
                                        .addComponent(btPrinterOn)
                                        .addComponent(btVpnOn)
                                        .addComponent(btLightingOn)
                                        .addComponent(btThermostatOn))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(gl_container.createParallelGroup(Alignment.BASELINE)
                                        .addComponent(btPrinterOff)
                                        .addComponent(btVpnOff)
                                        .addComponent(btLightingOff)
                                        .addComponent(btThermostatOff))
                                .addGap(5)
                                .addGroup(gl_container.createParallelGroup(Alignment.BASELINE)
                                        .addComponent(btPrintTest)
                                        .addComponent(btVpnLocation)
                                        .addComponent(btLightUp)
                                        .addComponent(btLightDown)
                                        .addComponent(btThermostatUp)
                                        .addComponent(btThermostatDown))
                                .addContainerGap())
        );
        container.setLayout(gl_container);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
                layout.createParallelGroup(Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(container, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(container, GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                                .addContainerGap())
        );


        pack();
    }// </editor-fold>

    private void lightingStatus1ActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void printerStatus1ActionPerformed(java.awt.event.ActionEvent evt) {
        boolean printStatus = true;
        printerStatus.setText(String.valueOf(printStatus));
    }

    private void btLightDownActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void lightingStatusActionPerformed(java.awt.event.ActionEvent evt) {

    }
    private void printerStatusActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void btLightingStatusActionPerformed(java.awt.event.ActionEvent evt) {


    }

    private void btVpnLocationActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void btPrinterStatusActionPerformed(java.awt.event.ActionEvent evt) {



    }

    public void printerStatus(PrinterRequest request, StreamObserver<PrinterResponse> responseObserver) {
        Printer printStatus = request.getStatus();
        boolean status = printStatus.getStatus();


        //create the  response
        String result;
        if (!(status)) {
            result = "The Printer is Offline";
        } else {
            result = "The Printer is Online";
        }

        PrinterResponse response = PrinterResponse.newBuilder()
                .setResult(result)
                .build();

        //sends response to client
        responseObserver.onNext(response);

        //complete the RPC call
        responseObserver.onCompleted();

        // super.greet(request, responseObserver);

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws ClassNotFoundException, InstantiationException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Controller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Controller().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btLightDown;
    private javax.swing.JButton btLightUp;
    private javax.swing.JButton btLightingOff;
    private javax.swing.JButton btLightingOn;
    private javax.swing.JButton btLightingStatus;
    private javax.swing.JButton btPrintTest;
    private javax.swing.JButton btPrinterOff;
    private javax.swing.JButton btPrinterOn;
    private javax.swing.JButton btPrinterStatus;
    private javax.swing.JButton btThermostatDown;
    private javax.swing.JButton btThermostatOff;
    private javax.swing.JButton btThermostatOn;
    private javax.swing.JButton btThermostatStatus;
    private javax.swing.JButton btThermostatUp;
    private javax.swing.JButton btVpnLocation;
    private javax.swing.JButton btVpnOff;
    private javax.swing.JButton btVpnOn;
    private javax.swing.JButton btVpnStatus;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JTextField thermostatStatus;
    private javax.swing.JTextField lightingStatus;
    private javax.swing.JLayeredPane container;
    private javax.swing.JTextField vpnStatus;
    private javax.swing.JTextField printerStatus;
    private JLabel lblNewLabel;
    private final Action action = new SwingAction();
    private final Action action_1 = new SwingAction_1();
    private class SwingAction extends AbstractAction {
        public SwingAction() {
            putValue(NAME, "SwingAction");
            putValue(SHORT_DESCRIPTION, "Some short description");
        }
        public void actionPerformed(ActionEvent e) {
        }
    }
    private class SwingAction_1 extends AbstractAction {
        public SwingAction_1() {
            putValue(NAME, "SwingAction_1");
            putValue(SHORT_DESCRIPTION, "Some short description");
        }
        public void actionPerformed(ActionEvent e) {
        }
    }
    @Override
    public void actionPerformed(ActionEvent e) {
        JButton button = (JButton)e.getSource();
        String label = button.getActionCommand();

        if (label.equals("Printer Services")) {
            System.out.println("Checking...");


            /*
             *
             */
            ManagedChannel  channel1 = ManagedChannelBuilder.forAddress("localhost", 50052)
                    .usePlaintext()
                    .build();

            PrintServiceGrpc.PrintServiceBlockingStub blockingStub = PrintServiceGrpc.newBlockingStub(channel1);

            Printer printStatus = Printer.newBuilder()
                    .setStatus(false)
                    .build();


            //preparing message to send
            PrinterRequest printerRequest = PrinterRequest.newBuilder()
                    .setStatus(printStatus)
                    .build();

            PrinterResponse printResponse = blockingStub.printerStatus(printerRequest);

            printResponse.getResult();

        }else{

        }

    }
}